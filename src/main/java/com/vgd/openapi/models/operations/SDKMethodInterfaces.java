/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.vgd.openapi.models.operations;

import com.vgd.openapi.models.components.Order;
import com.vgd.openapi.models.components.Pet;
import com.vgd.openapi.models.components.User;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class SDKMethodInterfaces {


    public interface MethodCallUpdatePet {
        UpdatePetResponse update(
            Pet request) throws Exception;
    }


    public interface MethodCallAddPet {
        AddPetResponse add(
            Pet request) throws Exception;
    }


    public interface MethodCallFindPetsByStatus {
        FindPetsByStatusResponse findByStatus(
            Optional<? extends Status> status) throws Exception;
    }


    public interface MethodCallFindPetsByTags {
        FindPetsByTagsResponse findByTags(
            Optional<? extends List<String>> tags) throws Exception;
    }


    public interface MethodCallGetPetById {
        GetPetByIdResponse getById(
            long petId) throws Exception;
    }


    public interface MethodCallDeletePet {
        DeletePetResponse delete(
            Optional<String> apiKey,
            long petId) throws Exception;
    }


    public interface MethodCallUploadFile {
        UploadFileResponse uploadFile(
            long petId,
            Optional<String> additionalMetadata,
            Optional<? extends byte[]> requestBody) throws Exception;
    }


    public interface MethodCallGetInventory {
        GetInventoryResponse getInventoryDirect() throws Exception;
    }


    public interface MethodCallPlaceOrder {
        PlaceOrderResponse placeOrder(
            Optional<? extends Order> request) throws Exception;
    }


    public interface MethodCallDeleteOrder {
        DeleteOrderResponse deleteOrder(
            long orderId) throws Exception;
    }


    public interface MethodCallGetOrderById {
        GetOrderByIdResponse get(
            long orderId) throws Exception;
    }


    public interface MethodCallCreateUser {
        CreateUserResponse create(
            Optional<? extends User> request) throws Exception;
    }


    public interface MethodCallCreateUsersWithListInput {
        CreateUsersWithListInputResponse createWithList(
            Optional<? extends List<User>> request) throws Exception;
    }


    public interface MethodCallLoginUser {
        LoginUserResponse login(
            Optional<String> username,
            Optional<String> password) throws Exception;
    }


    public interface MethodCallLogoutUser {
        LogoutUserResponse logoutDirect() throws Exception;
    }


    public interface MethodCallGetUserByName {
        GetUserByNameResponse getByName(
            String username) throws Exception;
    }


    public interface MethodCallUpdateUser {
        UpdateUserResponse update(
            String username,
            Optional<? extends User> user) throws Exception;
    }


    public interface MethodCallDeleteUser {
        DeleteUserResponse delete(
            String username) throws Exception;
    }


}
